server:
  port: 8081

spring:
  application:
    name: auth-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/booking_db}
    username: ${SPRING_DATASOURCE_USERNAME:booking_user}
    password: ${SPRING_DATASOURCE_PASSWORD:booking_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080}/realms/booking
          jwk-set-uri: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080}/realms/booking/protocol/openid-connect/certs

keycloak:
  realm: ${KEYCLOAK_REALM:booking}
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080}
  resource: ${KEYCLOAK_RESOURCE:booking-app}
  credentials:
    secret: ${KEYCLOAK_SECRET:5dIxYEao2nhTHYrfLdTjYVymblczkJ1N}

app:
  cors:
    allowed-origins: ${APP_CORS_ALLOWED_ORIGINS:http://localhost:4200}

logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    com.neoflex.auth: DEBUG 