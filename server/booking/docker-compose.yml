version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: booking-postgres
    environment:
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_password
      POSTGRES_DB: keycloak
      POSTGRES_MULTIPLE_DATABASES: booking_db
    volumes:
      - ./docker/postgres/create-multiple-databases.sh:/docker-entrypoint-initdb.d/00-create-multiple-databases.sh
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: booking-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: booking_user
      KC_DB_PASSWORD: booking_password
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
      KC_PROXY: edge
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: 
      - start-dev
      - --db=postgres 
      - --db-url-host=postgres 
      - --db-username=booking_user 
      - --db-password=booking_password
      - --db-schema=public
      - --features=scripts
      - --http-enabled=true
      - --hostname=localhost

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: booking-auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/booking_db
      SPRING_DATASOURCE_USERNAME: booking_user
      SPRING_DATASOURCE_PASSWORD: booking_password
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: booking
      KEYCLOAK_RESOURCE: booking-app
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - keycloak

  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    container_name: booking-api-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/booking_db
      SPRING_DATASOURCE_USERNAME: booking_user
      SPRING_DATASOURCE_PASSWORD: booking_password
      AUTH_SERVICE_URL: http://auth-service:8081
    ports:
      - "8082:8082"
    depends_on:
      - auth-service

  nginx:
    image: nginx:alpine
    container_name: booking-nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - api-service

volumes:
  postgres_data: 